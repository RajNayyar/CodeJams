using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Solution {
  
    static int commonChild(string s1, string s2) {
       
        int [,] arr=new int [s1.Length+1,s2.Length+1];
      

    
        for(int i=0;i<=s1.Length;i++)
            {
            arr[i,0] = 0 ;
            arr[0,i]=0;
            }
          
        
        
             for(int i = 1; i<=s2.Length; i++)
        {
            for(int j = 1; j<=s1.Length; j++)
            {
                if(s2[i-1]==s1[j-1])
                {
                    arr[i,j]=arr[i-1,j-1]+1;
                }
                else{
                    if(arr[i,j-1]>arr[i-1,j])
                    {
                    arr[i,j]=arr[i,j-1];
                    }
                    else
                    {
                    arr[i,j]=arr[i-1,j];
                    }
                }
            }
        }
        
      return arr[s1.Length,s2.Length];
        
       /* 
        int a = s1.Length;
        int b = s2.Length;
        int d = 0;
        
        if(s1.Length>s2.Length)
        {
            return check(s1,s2);
        }
        else if(s2.Length>s1.Length)
        {
            return check(s2,s1);
        }
        else
        {
            return check(s2,s1);
        }
        return 0;*/
    }

    static void Main(string[] args) {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        string s1 = Console.ReadLine();

        string s2 = Console.ReadLine();

        int result = commonChild(s1, s2);

        textWriter.WriteLine(result);

        textWriter.Flush();
        textWriter.Close();
    }
}
